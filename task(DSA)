import os
import re

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def delete(self, data):
        current = self.head
        if current and current.data == data:
            self.head = current.next
            return True
        while current and current.next:
            if current.next.data == data:
                current.next = current.next.next
                return True
            current = current.next
        return False

    def update(self, old_data, new_data):
        current = self.head
        while current:
            if current.data == old_data:
                current.data = new_data
                return True
            current = current.next
        return False

    def search(self, data):
        current = self.head
        while current:
            if current.data == data:
                return True
            current = current.next
        return False

    def print_list(self):
        current = self.head
        while current:
            print(current.data)
            current = current.next

class Document:
    def __init__(self, name):
        self.name = name
        self.content = LinkedList()

    def insert_line(self, line, index):
        if index == 0:
            self.content.insert(line)
        else:
            current = self.content.head
            for _ in range(index - 1):
                if current:
                    current = current.next
                else:
                    return False
            if current:
                new_node = Node(line)
                new_node.next = current.next
                current.next = new_node
                return True
            else:
                return False

    def delete_line(self, index):
        if index == 0:
            return self.content.delete(self.content.head.data)
        else:
            current = self.content.head
            for _ in range(index - 1):
                if current:
                    current = current.next
                else:
                    return False
            if current and current.next:
                current.next = current.next.next
                return True
            else:
                return False

    def update_line(self, old_line, new_line, index):
        if index == 0:
            return self.content.update(old_line, new_line)
        else:
            current = self.content.head
            for _ in range(index - 1):
                if current:
                    current = current.next
                else:
                    return False
            if current:
                return self.content.update(old_line, new_line)
            else:
                return False

    def search_line(self, data):
        return self.content.search(data)

    def print_document(self):
        self.content.print_list()

class Notepad:
    def __init__(self):
        self.documents = LinkedList()

    def create_document(self, name):
        new_document = Document(name)
        self.documents.insert(new_document)

    def open_document(self, name):
        current = self.documents.head
        while current:
            if current.data.name == name:
                return current.data
            current = current.next
        return None

    def save_document(self, document):
        with open(document.name, 'w') as file:
            current = document.content.head
            while current:
                file.write(current.data + '\n')
                current = current.next

    def print_documents(self):
        current = self
